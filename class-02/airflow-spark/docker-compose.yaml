version: "3.8"

x-airflow-common: &airflow-common
  image: apache/airflow:2.10.2-python3.11
  env_file: .env
  environment:
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres-meta:5432/airflow
    PROJECT_DIR: ${PWD}
    _PIP_ADDITIONAL_REQUIREMENTS: |
      -r /opt/airflow/requirements.txt
  user: "${AIRFLOW_UID:-50000}:0"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./requirements.txt:/opt/airflow/requirements.txt
    # kluczowe: dostęp do Dockera z hosta
    - /var/run/docker.sock:/var/run/docker.sock
    # montujemy nasze joby do Airflow (do podglądu/logiki DAG), ale DockerOperator zamontuje je osobno do /app
    - ./jobs:/opt/airflow/jobs
  depends_on:
    - postgres-meta

services:
  postgres-meta:
    image: postgres:16
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - postgres_meta_data:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - >
        pip install --no-cache-dir -r /opt/airflow/requirements.txt &&
        airflow db init &&
        airflow users create --username airflow --password airflow
        --firstname Admin --lastname User --role Admin --email admin@example.com

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-triggerer:
    <<: *airflow-common
    command: triggerer

volumes:
  postgres_meta_data:
